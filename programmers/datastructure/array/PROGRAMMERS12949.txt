### 프로그래머스 12949 문제 : 행렬의 곱셈

2차원 행렬 arr1과 arr2를 입력받아 arr1에 arr2를 곱한 결과를 반환하는 solution() 함수를 완성하세요.

## 제약 조건
행렬 arr1, arr2의 행과 열의 길이는 2 이상 100 이하입니다.
행렬 arr1, arr2의 데이터는 -10 이상 20 이하인 자연수입니다.
곱할 수 있는 배열만 주어집니다.

## 입출력 예시 (arr1 / arr2 / return)
|-------------------------------------------------------------------------------------------------------------------------------|
|   [[1, 4], [3, 2], [4, 1]]            |   [[3, 3], [3, 3]]                    |   [[15, 15], [15, 15], [15, 15]]              |
|-------------------------------------------------------------------------------------------------------------------------------|
|   [[2, 3, 2], [4, 2, 4], [3, 1, 4]]   |   [[5, 4, 3], [2, 4, 1], [3, 1, 1]]   |   [[22, 22, 11], [36, 28, 18], [29, 20, 14]]  |
|-------------------------------------------------------------------------------------------------------------------------------|

-------------------------------------------------------------------

### 문제 분석

M*M 행렬 * N*N 행렬 = M*N행렬

행렬 곱셈
[A11, A12]  [B11, B12]
[A21, A22]  [B21, B22]

[((A11*B11) + (A12*B21)), ((A11*B12) + (A12*B22))]
[((A21*B11) + (A22*B21)), ((A21*B12) + (A22*B22))]

3*3 * 2*2 = 3*2
3*3 * 3*3 = 3*3

e.g.,
00 01       00 01
10 11       10 11

i, j, k
i -> arr1의 행
j -> arr2의 열
k -> arr1의 열 (arr1의 열만큼 더하는 횟수 반복되기 때문)

00*00+01*10
00*01+01+11
10*00+11*10
10*01+11*11


곰셈행렬[i][j] = arr1[i][k]*arr2[k][j] + arr1[i][k+1]*arr[k+1][j]
i=0, j=0, k=0 -> 00*00 
i=0, j=0, k=1 -> 01*10
i=0, j=1, k=0 -> 00*01
i=0, j=1, k=1 -> 01*11

즉 삼중 for문으로 돌리고 곱한 것들을 더하면 될 듯


-------------------------------------------------------------------

### 수도 코드

곰셈 배열 [arr1의 행][arr2의 열] 선언

for (i -> 0 ~ arr1의 크기 - 1) {
    for (j -> 0 ~ arr2[0]의 크기 - 1) {
        for (k -> 0 ~ arr1의 크기 - 1) {
            곱셈배열[i][j] += arr1[i][k]*arr2[k][j]
        }
    }
}

곰셈 배열 반환