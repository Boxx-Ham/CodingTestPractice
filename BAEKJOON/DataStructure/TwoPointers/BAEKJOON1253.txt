### 백준 1253 문제 (좋다) 분석

1, 2, 3, 4, 5, 6, 7, 8, 9, 10 총 10개의 수가 주어짐
각 수를 더해 나온 수가 10개의 수 중에 있으면 그건 좋은 수 

1 + 2 = 3   -- GOOD
1 + 3 = 4   -- GOOD
1 + 4 = 5   -- GOOD
1 + 5 = 6   -- GOOD
1 + 6 = 7   -- GOOD
1 + 7 = 8   -- GOOD
1 + 8 = 9   -- GOOD
1 + 9 = 10  -- GOOD
2 + 3 = 5   -- 이미 있음
2 + 4 = 6
2 + 5 = 7
2 + 6 = 8
2 + 7 = 9
2 + 8 = 10
2 + 9 = 11  -- 10개의 수 중에 포함되지 않음
2 + 10 = 12
3 + 4 = 7

투 포인터를 양쪽 끝에 두고 찾는 값을 0부터 N-1 까지 반복해서 찾기

e.g., p1 = 1, p2 = 10, find = 1
1 + 10 = 11 > 1
1 + 9 = 10 > 1
1 + 8 = 9 > 1
1 + 7 = 8 > 1
1 + 6 = 7 > 1
...
1 + 2 = 3 > 1
p1 : 1,  p2 : 1되면 끝.
find = 2
1 + 10 = 11 > 2
...
1 + 2 = 3 > 2
p1 : 1, p2 : 1 되면 끝.
find = 3
1 + 10 = 11 > 3
...
1 + 2 = 3 = 3
찾음. 
다음으로 이동
find = 4
1 + 10 = 11 > 4
...
1 + 3 = 4 = 4
찾음.
다음으로 이동
find = 5
1 + 4 = 5 = 5
찾음.
다음으로 이동
...

자기 자신은 합을 더하는 로직에서 제외해야 한다.

-------------------------------------------------------------------

### 수도 코드

N 입력받기

N 크기의 배열 arr 선언
for (i -> 0 ~ N - 1) {
    N 크기의 배열 arr 입력받기
}

count = 0
arr 정렬하기

for (i -> 0 ~ N - 1) {
    p1 = 0
    p2 = N - 1
    long find = arr[i]
    while (p1 < p2) {
        if (arr[p1] + arr[p2]이 find와 같으면) {
            if (p1, p2가 다 i 가 아니면) {
                count 증가
                다음 for문으로 이동
            } else if (p1이 i 이면) {
                p1 증가
            } else if (p2가 i 이면) {
                p2 감소
            }
            
        } else if (arr[p1] + arr[p2] 가 find 보다 크면) {
            p2 감소
        } else {
            p1 증가
        }
    }
}