###문제 005 : 나머지 합 분석

부분합을 M으로 나누어서 나머지가 0인 (i, j) 쌍의 개수 구하기
--> combination 활용(생각도 못했음..)
--> 근데 굳이 combination 쓰지 않아도 구할 수 있을 것 같음

e.g., 
A1 = 1, A2 = 2, A3 = 3, A4 = 1, A5 = 2
S0 = 0, S1 = 1, S2 = 3, S3 = 6, S4 = 7, S5 = 9
S0 % 3 = 0, S1 % 3 = 1, S2 % 3 = 0, S3 % 3 = 0, S4 % 3 = 1, S5 % 3 = 0

(S[j] - S[i - 1]) % 3 = 0이 되는 것을 찾아야 함
(S[j] % 3) - (S[i - 1] % 3) = 0

핵심
#(S[j] % 3) = (S[i - 1] % 3)#

나머지 배열을 만들어서 S0 = 0이니깐 초기값을
1 0 0 으로 넣고 시작.

S1 = 1이므로 1인덱스에 +1 해줘야 하는데

결국 나머지가 0이 되도록 하는 건 지금 구한 모듈러와 전에 구한 모듈러가 같아야 한다는 것.
즉, 나머지가 1인 현재 모듈러 한개, 전에 구한 나머지가 1인 모듈러 중 하나를 선택하면 S[i]%3 = S[i-1]%3 이 성립

예를 들어
1 0 0 에서 1 1 0 으로 될 텐데
전에 구한 나머지가 1인 모듈러 중에서 하나를 선택해야 하니깐

출력할 변수에 전에 구한 나머지가 1인 모듈러의 값을 더해주면 됨

1 0 0 에서 1 1 0으로 바뀌니 출력할 변수에 0을 더해주고(출력할 변수 : 0) 1 0 0 에서 1 1 0 으로 변경

그 다음 S2 % 3 = 0이 되므로 1 1 0 에서 2 1 0 이 됨
그러면 현재 나머지는 무조건 1개 구하고, 그럼 나머지 1개는 이전에 구한 0 인덱스의 개수 중에서 뽑아야 함
즉 1개 중에 1개 택. -> 출력할 변수에 1 더함 (출력할 변수 : 1)

그 다음 S3 % 3 = 0 이므로 2 1 0 에서 3 1 0 이 됨
현재 나머지는 무조건 1개이고, 나머지 1개를 이전에 구한 0 인덱스의 개수 중 택 1
경우의 수 : 2(2개 중 1개를 고르는 거니깐.)
출력할 변수에 2 더함 (출력할 변수 : 1 + 2 = 3)

... 이런식으로 가면 될 듯


-------------------------------------------------------------------

### 수도 코드

N과 M 입력받기

나머지의 개수를 각각 저장하기 위해 나머지를 인덱스로 하는 배열 선언
S0 = 0이므로 인덱스 0의 초기값을 1로 설정

출력할 변수 0으로 선언

부분합을 모듈러 연산 한 값을 담은 변수를 0으로(S0 = 0) 선언

N개의 수 입력받기
for (i -> 0 ~ N - 1) {
    부분합을 담은 변수에 원래 부분합 + 현재 값 더하기
    모듈러 연산을 실행할 변수에 부분합을 담은 변수 % M 하기

    모듈러 연산 변수를 인덱스로 하는 나머지 배열의 값을 출력할 변수에 더하기

    모듈러 연산 변수를 인덱스로 하는 나머지 배열의 값을 + 1 하기
}

출력할 변수 출력